name: CD - Deploy to OKE (via Bastion)

on:
  workflow_call:
    inputs:
      environment:
        description: "Target environment (dev or uat)"
        required: true
        type: string
    secrets:
      BASTION_HOST:
        required: true
      BASTION_OCID:
        required: true
      OKE_CLUSTER_OCID:
        required: true
      OCI_CLI_REGION:
        required: true
      OCI_CLI_KEY_CONTENT:
        required: true
      OCI_CLI_USER:
        required: true
      OCI_CLI_TENANCY:
        required: true
      OCI_CLI_FINGERPRINT:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-22.04
    env:
      OCI_REGION: ${{ secrets.OCI_CLI_REGION }}
      OCIR_HOST: ${{ secrets.OCIR_HOST }}
      OCIR_REPO: ${{ secrets.OCIR_REPO }}

    steps:
      # 🧾 Checkout code
      - uses: actions/checkout@v4

      # 📦 Download image-tag artifact
      - name: Download image tag artifact
        uses: actions/download-artifact@v4
        with:
          name: image-tag

      # 🧠 Read image tag
      - name: Read image tag
        run: |
          IMAGE_TAG=$(cat image-tag.txt)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "📦 Using image: ${OCIR_REPO}:${IMAGE_TAG}"

      # 🧭 Determine namespace based on input
      - name: Set target namespace
        run: |
          if [[ "${{ inputs.environment }}" == "dev" ]]; then
            echo "NAMESPACE=bsfc-dev" >> $GITHUB_ENV
          elif [[ "${{ inputs.environment }}" == "uat" ]]; then
            echo "NAMESPACE=bsfc-uat" >> $GITHUB_ENV
          else
            echo "❌ Invalid environment input"; exit 1
          fi
          echo "🧭 Deploying to namespace: $NAMESPACE"

      # ☁️ Install OCI CLI & kubectl
      - name: Install OCI CLI & kubectl
        run: |
          set -euxo pipefail
          curl -fsSL -o install.sh https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
          chmod +x install.sh
          sudo ./install.sh --accept-all-defaults \
            --install-dir /usr/local/lib/oracle-cli \
            --exec-dir /usr/local/bin
          curl -fsSLo kubectl "https://dl.k8s.io/release/$(curl -fsSL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -m 0755 kubectl /usr/local/bin/kubectl

      # 🔐 Configure OCI credentials
      - name: Configure OCI CLI
        run: |
          set -euxo pipefail
          mkdir -p ~/.oci
          echo "${{ secrets.OCI_CLI_KEY_CONTENT }}" > ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/oci_api_key.pem
          cat > ~/.oci/config <<EOF
          [DEFAULT]
          user=${{ secrets.OCI_CLI_USER }}
          tenancy=${{ secrets.OCI_CLI_TENANCY }}
          fingerprint=${{ secrets.OCI_CLI_FINGERPRINT }}
          key_file=$HOME/.oci/oci_api_key.pem
          region=${{ env.OCI_REGION }}
          EOF
          chmod 600 ~/.oci/config

      # 🚀 Deploy workload to OKE
      - name: Deploy to OKE
        run: |
          set -euxo pipefail
          sed -i "s|IMAGE_PLACEHOLDER|${OCIR_REPO}:${IMAGE_TAG}|g" k8s/deployment.yaml
          kubectl apply -n $NAMESPACE -f k8s/deployment.yaml
          kubectl rollout status -n $NAMESPACE deploy/bsfc --timeout=180s
          echo "✅ Deployment successful to $NAMESPACE using ${OCIR_REPO}:${IMAGE_TAG}"
