name: CI - Build & Push Image

on:
  push:
    branches: [ master, staging ]
    paths:
      - 'Dockerfile'
      - 'web/**'
      - 'k8s/**'
  pull_request:
    branches: [ master, staging ]

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      OCI_REGION: ${{ secrets.OCI_CLI_REGION }}
      OCIR_HOST: ${{ secrets.OCIR_HOST }}
      OCIR_REPO: ${{ secrets.OCIR_REPO }}

    steps:
      # 🧾 Checkout code
      - uses: actions/checkout@v4

      # ✅ Lint YAML and Dockerfile
      - name: Lint YAML & Dockerfile
        run: |
         set -euxo pipefail
         # Install yamllint via pip (Python package)
         pip install --user yamllint

         # Install hadolint via official binary
         wget -qO /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
         chmod +x /usr/local/bin/hadolint

         # Run linters
         yamllint k8s/
         hadolint Dockerfile


      # 🏗️ Build Docker image
      - name: Build & Tag Docker Image
        run: |
          set -euxo pipefail
          IMAGE_TAG="${GITHUB_REF_NAME}-build-${GITHUB_RUN_NUMBER}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t "$OCIR_REPO:$IMAGE_TAG" .
          docker tag "$OCIR_REPO:$IMAGE_TAG" "$OCIR_REPO:latest"

      # 🔐 Login to OCIR and push image
      - name: Login & Push to OCIR
        run: |
          set -euxo pipefail
          echo "${{ secrets.OCI_AUTH_TOKEN }}" | docker login "$OCIR_HOST" \
            -u "${{ secrets.OCI_USERNAME }}" --password-stdin
          docker push "$OCIR_REPO:$IMAGE_TAG"
          docker push "$OCIR_REPO:latest"

      # 🧾 Save image tag and upload as artifact
      - name: Save image tag to file
        run: echo "$IMAGE_TAG" > image-tag.txt

      - name: Upload image tag artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: image-tag.txt

      # 🚀 Deploy to OKE via reusable workflow
      - name: Deploy to OKE (via Bastion)
        uses: ./.github/workflows/cd-deploy-oke.yml
        with:
          environment: uat
        env:
          BASTION_HOST: ${{ secrets.BASTION_HOST }}
          BASTION_OCID: ${{ secrets.BASTION_OCID }}
          OKE_CLUSTER_OCID: ${{ secrets.OKE_CLUSTER_OCID }}
          OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
          OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
          OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
          OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
          OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
